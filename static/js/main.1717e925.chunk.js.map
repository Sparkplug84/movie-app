{"version":3,"sources":["components/Movies.js","components/Search.js","App.js","reportWebVitals.js","index.js"],"names":["Movies","props","className","movies","map","movie","index","src","Poster","alt","Title","Year","imdbID","href","target","rel","Search","useState","expand","setexpand","searchRef","useRef","type","placeholder","ref","onClick","current","focus","icon","faSearch","App","setMovies","getMovies","a","fetch","res","json","data","console","log","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSA6BeA,MA1Bf,SAAgBC,GACZ,OACI,qBAAKC,UAAU,oBAAf,SAEQD,EAAME,OAAOC,KAAI,SAACC,EAAOC,GAAR,OACb,sBAAKJ,UAAU,QAAf,UACI,qBAAKA,UAAU,eAAeK,IAAsB,QAAjBF,EAAMG,OAAmBH,EAAMG,OAAS,yHAA0HC,IAAKJ,EAAMK,QAChN,sBAAKR,UAAU,cAAf,UACI,4BAAG,oDACH,4BAAIG,EAAMK,QACV,4BAAG,qDACH,4BAAIL,EAAMM,OACV,4BAAG,gDACH,4BAAIN,EAAMO,SACV,oBAAGC,KAAI,qCAAgCR,EAAMO,OAAtC,KAAiDE,OAAO,SAASC,IAAI,aAA5E,6BAAyG,qBAAKR,IAAI,6GAA6GE,IAAI,eAEvO,qBAAKP,UAAU,iBAAf,SACI,6BAAKG,EAAMK,mB,sBCMxBM,MArBf,WACI,MAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACMC,EAAYC,mBAOlB,OACI,qBAAKnB,UAAU,oBAAf,SACI,sBAAKA,UAAS,iBAAYgB,EAAS,SAAW,MAA9C,UACI,uBAAOI,KAAK,OAAOpB,UAAU,gBAAgBqB,YAAY,wBAAwBC,IAAKJ,IACtF,wBAAQlB,UAAU,iBAAiBuB,QAT1B,WACjBN,GAAWD,GACXE,EAAUM,QAAQC,SAOV,SACI,cAAC,IAAD,CAAiBC,KAAMC,c,MCY5BC,MA1Bf,WACE,MAA4Bb,mBAAS,IAArC,mBAAOd,EAAP,KAAe4B,EAAf,KAEMC,EAAS,uCAAG,8BAAAC,EAAA,4DACE,+DADF,SAEEC,MADA,gEADF,cAEVC,EAFU,gBAGGA,EAAIC,OAHP,OAGVC,EAHU,OAIhBC,QAAQC,IAAIF,GACZN,EAAUM,EAAKrB,QALC,2CAAH,qDAaf,OAJAwB,qBAAU,WACRR,MACC,IAGD,qBAAK9B,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAQC,OAAQA,UCbTsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1717e925.chunk.js","sourcesContent":["import React from 'react'\nimport './Movies.css'\n\nfunction Movies(props) {\n    return (\n        <div className=\"movies__container\">\n            {\n                props.movies.map((movie, index) =>(\n                    <div className=\"movie\">\n                        <img className=\"movie__image\" src={movie.Poster !== \"N/A\" ? movie.Poster : \"https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/1200px-No-Image-Placeholder.svg.png\"} alt={movie.Title} />\n                        <div className=\"movie__info\">\n                            <p><strong>Movie Title:</strong></p>\n                            <p>{movie.Title}</p>\n                            <p><strong>Release Year:</strong></p>\n                            <p>{movie.Year}</p>\n                            <p><strong>IMDB ID:</strong></p>\n                            <p>{movie.imdbID}</p>\n                            <a href={`https://www.imdb.com/title/${movie.imdbID}/`} target=\"_blank\" rel=\"noreferrer\">View details on <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/69/IMDB_Logo_2016.svg/1200px-IMDB_Logo_2016.svg.png\" alt=\"IMDB\"></img></a>\n                        </div>\n                        <div className=\"movie__details\">\n                            <h3>{movie.Title}</h3>\n                        </div>\n                    </div>\n                ))\n            }\n        </div>\n    )\n}\n\nexport default Movies\n","import React, {useState, useRef} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport './Search.css'\n\nfunction Search() {\n    const [expand, setexpand] = useState(false)\n    const searchRef = useRef();\n\n    const expandSearch = () => {\n        setexpand(!expand)\n        searchRef.current.focus()\n    }\n\n    return (\n        <div className=\"search__container\">\n            <div className={`search ${expand ? 'active' : null}`}>\n                <input type=\"text\" className=\"search__input\" placeholder=\"Search for a movie...\" ref={searchRef}/>\n                <button className=\"search__button\" onClick={expandSearch}>\n                    <FontAwesomeIcon icon={faSearch} />\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default Search\n","import React, {useEffect, useState} from 'react';\nimport Movies from './components/Movies'\nimport Search from './components/Search'\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([])\n\n  const getMovies = async () => {\n    const MOVIE_API = \"https://www.omdbapi.com/?s=back+to+the+future&apikey=aa19cb4\"\n    const res = await fetch(MOVIE_API)\n    const data = await res.json()\n    console.log(data)\n    setMovies(data.Search)\n\n  }\n\n  useEffect(() => {\n    getMovies()\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <Search />\n        <Movies movies={movies} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}